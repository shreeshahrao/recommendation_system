# -*- coding: utf-8 -*-
"""Copy of Recipe_recommendation_Model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VBsMcaD4DJzJiWUinDxdvnhTKubx-EJ9
"""

import numpy as np
#import matplotlib.pyplot as plt
import pandas as pd
#import seaborn as sns
#import os 
import re
import csv
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.metrics.pairwise import cosine_similarity



#os.chdir('/content/drive/My Drive/TEAM 2021')

#!unzip 'IndianFoodDatasetCSV.csv.zip' -d '/content/'

################### Data Cleansing and storing ####################################
food_res = pd.read_csv('IndianFoodDatasetCSV.csv')
food_dataset = food_res.drop(columns=['RecipeName','Ingredients','Instructions'])
food_dataset = food_dataset.dropna()
final_dataset = food_dataset.copy()


saperated_ingred = []
i=0
for recipe in food_dataset.TranslatedIngredients:
  try:
    saperated_ingred.append(recipe.split(','))
  except:
    #print(recipe)
    print(i)
  i+=1
'''
for i in range(2):
  for ingred in saperated_ingred[i]:
   print(ingred)
'''
length = []
for i in range(len(saperated_ingred)):
  length.append(len(saperated_ingred[i]))

full_data = []
for i in range(len(saperated_ingred)):
  recipe_ingrdiants=[]
  one_recipe=[]
  str_recipe = ''
  column = 0
  for ingred in saperated_ingred[i]:
    
    reg = re.split(r'[0-9]+[/]?[-]?[0-9]*[\btablespoon\b]?',ingred)
    
    try:
      reg.remove(' ')
    except:
      pass
    try:
      reg.remove(' / ')
    except:
      pass
    try:
      reg.remove('/')
    except:
      pass
    single_ingrediant = []
    for j in reg:
      j = re.sub(r'-[ A-Za-z]*','',j)
      j = re.sub(r'\((.*?)\)','',j)
      if j is None or j == '':
        pass
      else:
        j=j.lower()
        j=j.replace('tablespoon','')
        j=j.replace('teaspoons','')
        j=j.replace('teaspoon','')
        j=j.replace('cups','')
        j=j.replace('kg','')
        j=j.replace('cup','')
        j=j.replace('tsp','')
        j=j.replace('tbsp','')
        j=j.replace('gram','')
        j=j.replace('inch','')
        #j=j.replace('to',' ')
        j = j.strip()
        j =j.replace('s ','')
        single_ingrediant.append(j)
    recipe_ingrdiants.append(single_ingrediant[0])
  str_recipe = ' '.join(recipe_ingrdiants)
  #print(str_recipe)
  one_recipe.append(food_dataset['TranslatedRecipeName'].iloc[i])
  one_recipe.append(str_recipe)
  full_data.append(one_recipe)
  final_dataset.TranslatedIngredients.iloc[i] = str_recipe

print('final dataset',final_dataset)
#dataset = pd.DataFrame(full_data)
final_dataset.set_index('TranslatedRecipeName',inplace=True)
count_vec = CountVectorizer()
count_matrix = count_vec.fit_transform(final_dataset.TranslatedIngredients)
#print(count_matrix[1,:])
index = pd.Series(final_dataset.index)
total_ingredients = list(final_dataset.TranslatedIngredients)
total_ingredients.append(['rice vermicelli noodles onion carrots'])
x= ['chana dal white urad dal red chillies']
print(final_dataset.head())
print(final_dataset.iloc[1][10])
#print(x)
                               #Save the data for faster use
################################################################################################


################################################ model defination #######################################

def recommendation(X):
  l1 = []
  l2=[]
  count_vec = CountVectorizer()
  count_matrix = count_vec.fit_transform(final_dataset.TranslatedIngredients)
  count_x = count_vec.transform(X)
  cosine_sim = cosine_similarity(count_x,count_matrix)
  print(cosine_sim)
  score_series = pd.Series(cosine_sim[0]).sort_values(ascending= False)
  top_5 = list(score_series.iloc[:5].index)
  #dataset = pd.DataFrame(final_dataset)
  #dataset.to_csv('ikkoerg5dpe_itemdffds1.csv')
  #col_list = ['URL']
  #df = pd.read_csv("ikkoergdpe_itemdffds.csv", usecols=col_list)

  for i in top_5:
    l1.append(final_dataset.index[i])
    l2.append(final_dataset.iloc[i][10])
  return l1,l2



##############################################################################################################

####################################### Take input and transform ##############################################
ing,link = recommendation(x)

print(final_dataset[final_dataset.index=='Andhra Style Kandi Pachadi (Recipe In Hindi)'])



